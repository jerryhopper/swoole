# This is a basic workflow to help you get started with Actions

name: BUILD-TEST

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - "master"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install docker
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install \
            apt-transport-https \
            ca-certificates \
            curl \
            jq \
            composer \
            php-cli \
            gnupg-agent \
            software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository \
             "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
             $(lsb_release -cs) \
             stable"
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io
      - name: Enable Experimental buildx
        shell: bash
        run: |
          echo "DOCKER_CLI_EXPERIMENTAL=enabled">> $GITHUB_ENV
          set DOCKER_CLI_EXPERIMENTAL=enabled
          export DOCKER_CLI_EXPERIMENTAL=enabled
          sudo systemctl restart docker

      - name: Clone docker-swoole
        shell: bash
        run: |
          git clone https://github.com/swoole/docker-swoole.git
      - name: Patch 'src/Dockerfile.php'
        shell: bash
        run: |
          sed -i 's/arm64v8\/php/php/g' docker-swoole/src/Dockerfile.php
          cat docker-swoole/src/Dockerfile.php
          
      - name: Build image
        shell: bash
        run: |
          cd docker-swoole
          composer install
          SWOOLE_VERSION=4.5.9
          PHP_VERSION=7.1
          echo $PWD
          ls -latr       
          ./bin/generate-dockerfiles.php $SWOOLE_VERSION
          set DOCKER_CLI_EXPERIMENTAL=enabled
          export DOCKER_CLI_EXPERIMENTAL=enabled  
          docker buildx -t "jerryhopper/swoole:$SWOOLE_VERSION-php$PHP_VERSION" --platform linux/arm/v7,linux/arm64,linux/amd64 --no-cache -f "dockerfiles/$SWOOLE_VERSION/arm64v8/php$PHP_VERSION/Dockerfile" --push .
          docker buildx --build-arg DEV_MODE=true -t "jerryhopper/swoole:$SWOOLE_VERSION-php$PHP_VERSION-dev" --platform linux/arm/v7,linux/arm64,linux/amd64 --no-cache -f "dockerfiles/$SWOOLE_VERSION/arm64v8/php$PHP_VERSION/Dockerfile" --push .
          
          
          
          

